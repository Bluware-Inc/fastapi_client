# flake8: noqa E501
import json
from typing import Any, Awaitable, Dict, IO, List, Optional, TYPE_CHECKIN
from datetime import date, datetime, timedelta
from uuid import UUID
import pydantic
import typer
import yaml

from @CLIENT_IMPORT_NAME@ import models as m

from @CLIENT_IMPORT_NAME@.api_client import SyncApis

from @IMPORT_NAME@.cli_client import get_client_api

app = typer.Typer()
{{#operations}}
{{#operation}}
@app.command()
def {{operationId}}( {{#allParams}}
                        {{#isModel}}
                            request: {{>_dataTypeApi}}=typer.Option(..., help="{{description}}")
                        {{/isModel}}
                        {{^isModel}}
                            {{#required}}
                                {{#defaultValue}}{{paramName}}: {{>_dataTypeApi}}=typer.Option({{{defaultValue}}}, help="{{description}}"){{/defaultValue}}
                                {{^defaultValue}}{{paramName}}: {{>_dataTypeApi}}=typer.Option(..., help="{{description}}"){{/defaultValue}}
                            {{/required}}
                            {{^required}}{{paramName}}: Optional[{{>_dataTypeApi}}] = typer.Option(None, help="{{description}}"){{/required}}
                        {{/isModel}}
                        {{#hasMore}}, {{/hasMore}}{{/allParams}}
                        ) -> None:
{{#notes}}
    """
    {{{notes}}}
    """
{{/notes}}
    try:
        sync_apis: SyncApis = get_client_api()
        result: {{>_returnType}} = sync_apis.{{classVarName}}.{{operationId}}({{#allParams}}
            {{#isModel}}
                {{paramName}}=request,
            {{/isModel}}
            {{^isModel}}
                {{paramName}}={{paramName}},
            {{/isModel}}
            {{/allParams}})
    except Exception as e:
        typer.echo(typer.style(str(e), fg=typer.colors.WHITE, bg=typer.colors.RED))
        {{! client.close() }}
        return

    if isinstance(result, pydantic.BaseModel):
        typer.echo(yaml.dump(result.dict()))
    else:
        typer.echo(yaml.dump(result))

    {{! client.close() }}
{{/operation}}
{{/operations}}
    